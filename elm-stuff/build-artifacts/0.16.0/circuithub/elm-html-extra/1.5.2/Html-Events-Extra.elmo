Elm.Html = Elm.Html || {};
Elm.Html.Events = Elm.Html.Events || {};
Elm.Html.Events.Extra = Elm.Html.Events.Extra || {};
Elm.Html.Events.Extra.make = function (_elm) {
   "use strict";
   _elm.Html = _elm.Html || {};
   _elm.Html.Events = _elm.Html.Events || {};
   _elm.Html.Events.Extra = _elm.Html.Events.Extra || {};
   if (_elm.Html.Events.Extra.values) return _elm.Html.Events.Extra.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $Json$Decode = Elm.Json.Decode.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm);
   var _op = {};
   var targetValueIntParse = A2($Json$Decode.customDecoder,$Html$Events.targetValue,$String.toInt);
   var targetValueFloatParse = A2($Json$Decode.customDecoder,$Html$Events.targetValue,$String.toFloat);
   var targetValueMaybe = A2($Json$Decode.customDecoder,
   $Html$Events.targetValue,
   function (s) {
      return $Result.Ok(_U.eq(s,"") ? $Maybe.Nothing : $Maybe.Just(s));
   });
   var targetValueMaybeInt = function () {
      var traverse = F2(function (f,mx) {
         var _p0 = mx;
         if (_p0.ctor === "Nothing") {
               return $Result.Ok($Maybe.Nothing);
            } else {
               return A2($Result.map,$Maybe.Just,f(_p0._0));
            }
      });
      return A2($Json$Decode.customDecoder,targetValueMaybe,traverse($String.toInt));
   }();
   var targetValueMaybeFloatParse = function () {
      var traverse = F2(function (f,mx) {
         var _p1 = mx;
         if (_p1.ctor === "Nothing") {
               return $Result.Ok($Maybe.Nothing);
            } else {
               return A2($Result.map,$Maybe.Just,f(_p1._0));
            }
      });
      return A2($Json$Decode.customDecoder,targetValueMaybe,traverse($String.toFloat));
   }();
   var targetValueMaybeIntParse = function () {
      var traverse = F2(function (f,mx) {
         var _p2 = mx;
         if (_p2.ctor === "Nothing") {
               return $Result.Ok($Maybe.Nothing);
            } else {
               return A2($Result.map,$Maybe.Just,f(_p2._0));
            }
      });
      return A2($Json$Decode.customDecoder,targetValueMaybe,traverse($String.toInt));
   }();
   var targetValueInt = A2($Json$Decode.at,_U.list(["target","valueAsNumber"]),$Json$Decode.$int);
   var targetValueFloat = A2($Json$Decode.customDecoder,
   A2($Json$Decode.at,_U.list(["target","valueAsNumber"]),$Json$Decode.$float),
   function (v) {
      return $Basics.isNaN(v) ? $Result.Err("Not a number") : $Result.Ok(v);
   });
   var targetValueMaybeFloat = A2($Json$Decode.andThen,
   targetValueMaybe,
   function (mval) {
      var _p3 = mval;
      if (_p3.ctor === "Nothing") {
            return $Json$Decode.succeed($Maybe.Nothing);
         } else {
            return A2($Json$Decode.map,$Maybe.Just,targetValueFloat);
         }
   });
   var charCode = A2($Json$Decode.map,
   function (_p4) {
      return A2($Maybe.map,$Basics.fst,$String.uncons(_p4));
   },
   A2($Json$Decode._op[":="],"charCode",$Json$Decode.string));
   var onInput = F2(function (address,toAddressValue) {
      return A3($Html$Events.on,"input",$Html$Events.targetValue,function (str) {    return A2($Signal.message,address,toAddressValue(str));});
   });
   return _elm.Html.Events.Extra.values = {_op: _op
                                          ,onInput: onInput
                                          ,charCode: charCode
                                          ,targetValueFloat: targetValueFloat
                                          ,targetValueInt: targetValueInt
                                          ,targetValueMaybe: targetValueMaybe
                                          ,targetValueMaybeFloat: targetValueMaybeFloat
                                          ,targetValueMaybeInt: targetValueMaybeInt
                                          ,targetValueFloatParse: targetValueFloatParse
                                          ,targetValueIntParse: targetValueIntParse
                                          ,targetValueMaybeFloatParse: targetValueMaybeFloatParse
                                          ,targetValueMaybeIntParse: targetValueMaybeIntParse};
};